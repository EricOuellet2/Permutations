<Window x:Class="Permutations.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Permutations"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:oxy="http://oxyplot.org/wpf"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1500">
	<Window.DataContext>
		<local:MainWindowModel></local:MainWindowModel>
	</Window.DataContext>

	<Window.Resources>
		<Style TargetType="Slider">
			<Setter Property="AutoToolTipPlacement" Value="TopLeft" />
			<Setter Property="AutoToolTipPrecision" Value="1" />
			<Setter Property="IsSnapToTickEnabled" Value="True" />
			<Setter Property="TickPlacement" Value="TopLeft" />
		</Style>

		<ObjectDataProvider x:Key="EnumActions" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="local:EnumAction"/>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>

		<!--<ObjectDataProvider x:Key="EnumAlgoPermutations" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="local:EnumAlgoPermutation"/>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>-->
	</Window.Resources>


	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
		</Grid.RowDefinitions>

		<Grid Grid.Row ="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition></ColumnDefinition>
				<ColumnDefinition Width="10"></ColumnDefinition>
				<ColumnDefinition></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<Grid Grid.Column="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="*"></RowDefinition>
				</Grid.RowDefinitions>

				<Grid Grid.Row="0">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
						<RowDefinition></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
					</Grid.RowDefinitions>
					
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"></ColumnDefinition>
						<ColumnDefinition Width="20"></ColumnDefinition>
						<ColumnDefinition></ColumnDefinition>
					</Grid.ColumnDefinitions>

					<TextBlock Grid.Row="0" Grid.Column="0" TextWrapping="Wrap">Count of items to permute:</TextBlock>

					<StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
						<Slider Value="{Binding CountOfElementsToPermute}" 
						Minimum="1" 
						Maximum="20" 
						MinWidth="200" />
						<TextBox Text="{Binding CountOfElementsToPermute}" Width="40"></TextBox>
					</StackPanel>

					<TextBlock Grid.Row="1" Grid.Column="0" TextWrapping="Wrap">Action to do for each permutation:</TextBlock>
					<ComboBox Grid.Row="1" Grid.Column="2" ItemsSource="{Binding Source={StaticResource EnumActions}}"
						SelectedItem="{Binding EnumAction}" HorizontalAlignment="Left" Width="222">
					</ComboBox>

					<TextBlock Grid.Row="2" Grid.Column="0" TextWrapping="Wrap">Algorithm implementation:</TextBlock>
					<ListBox Grid.Row="2" Grid.Column="2" ItemsSource="{Binding EnumWrapperAlgoPermutation.Items}">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<CheckBox IsChecked="{Binding IsChecked}">
									<TextBlock Text="{Binding DescriptionOrName}" TextWrapping="Wrap"></TextBlock>
								</CheckBox>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>

					<TextBlock Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch">Note: ST = Single thread, MT = Multi threads</TextBlock>


					<StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right">
						<GroupBox Header="Single test" Padding="5">
							<Button Click="ButtonStartTestOnClick" HorizontalAlignment="Left" Padding="7,0,7,0">Start</Button>
						</GroupBox>
						<GroupBox Header="Sequence of test from 8 to selected count (chart)" Padding="5" Margin="7,0,0,0">
							<StackPanel Orientation="Horizontal">
								<Button Click="ButtonFillGraphicOnClick" HorizontalAlignment="Left" Padding="7,0,7,0">Start</Button>
								<CheckBox IsChecked="{Binding ShowResultInExcel}" Margin="3,0,0,0">Show result also in Excel</CheckBox>
							</StackPanel>							
						</GroupBox>
					</StackPanel>

				</Grid>

				<Grid Grid.Row="1">
					<Grid.RowDefinitions>
						<RowDefinition></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
					</Grid.RowDefinitions>

					<ListBox Grid.Row="0" Name="ListBoxResults" 
							 ItemsSource="{Binding Results}" 
							 IsSynchronizedWithCurrentItem="True"
							 Background="LightYellow" >
					</ListBox>

					<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
						<Button Click="ButtonCopyToClipboard">CopyToClipboard</Button>
						<Button Click="ButtonClearResultClick" Margin="3,0,0,0">Clear results</Button>
					</StackPanel>
				</Grid>


			</Grid>

			<GridSplitter Grid.Column="1"
						Width="7" 
						Background="Gray" 
						HorizontalAlignment="Stretch"
			></GridSplitter>

			<Border Grid.Column="2" BorderBrush="Black" BorderThickness="3">
				<oxy:PlotView Name="PlotViewMain" />
			</Border>
		</Grid>

		<StatusBar Grid.Row="1">
			<StatusBar.ItemsPanel>
				<ItemsPanelTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
					</Grid>
				</ItemsPanelTemplate>
			</StatusBar.ItemsPanel>

			<StatusBarItem Grid.Column="0">
				<TextBlock><Hyperlink NavigateUri="https://stackoverflow.com/questions/11208446/generating-permutations-of-a-set-most-efficiently" RequestNavigate="HyperlinkOnRequestNavigate">StackOverflow related question</Hyperlink></TextBlock>
			</StatusBarItem>
		</StatusBar>

	</Grid>
</Window>
